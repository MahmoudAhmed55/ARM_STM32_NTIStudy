/*
 * main.c
 *
 *  Created on: Nov 2, 2023
 *      Author: Mahmoud Ahmed Ismail
 */

#include "lib/STD_TYPES.h"
#include "lib/BIT_MATH.h"

#include "MCAL/RCC/RCC_Interface.h"
#include "MCAL/GPIO/GPIO_Interface.h"
#include "MCAL/NVIC/NVIC_Interface.h"
#include "MCAL/SYSTICK/SYSTICK_Interface.h"
#include "MCAL/EXI_Interrupt/EXI_Interrupt_Interface.h"
#include "MCAL/AFIO/AFIO_Interface.h"
#include "MCAL/TIMER/TIMER_INTERFACE.h"
#include "HAL/LCD/LCD_Interface.h"
#include "MCAL/UART/UART_Interface.h"
#include "HAL/ESP/ESP_Interface.h"
#include "APP/VtoI/VtoI_Interface.h"

volatile char str[100]={'0'};
volatile u8 i=0,x=0;

void rx(void)
{
	/*str[i]=UART_Recieve();
	i++;*/
	x=UART_Recieve();
}
volatile u16 t1=0,t2=0,flag=0,t=0,d=0;

void timer(void)
{
	TIMER_ICU1InterruptDisable();
	if (flag==0)
	{

		t1=TIMx_CCR1;
		Timer_InputCaptureEdge(FALLING_TIMER);
		flag=1;

	}
	 if (flag==1)
	{
		t2=TIMx_CCR1;
		t=t2-t1;
		Timer_InputCaptureEdge(RISING_TIMER);
		flag=2;
		TIMER_ICU1InterruptDisable();
	}
}
void main(void)
{
	//__enable_irq();
	RCC_InitClockSystem();
	RCC_EnableClock(APB2,AFIO_EN);
	RCC_EnableClock(APB2,IOPA);
	RCC_EnableClock(APB2,IOPB);
	RCC_EnableClock(APB2,IOPC);
	//RCC_EnableClock(APB2,USART);
	RCC_EnableClock(APB1,TIM2_EN);

	DIO_Init();
	LCD_Init();
	//UART_Init();
	SYSTICK_Init();
	TIMER_Init();
	Interrupt_Set_Enable(TIM2);
	TIMER_SetCallBack(timer);
	TIMER_ICU1InterruptEnable();
	LCD_GoTo(0,0);
	LCD_WriteString("TIMER2");
	/*UART_RX_SetCallBack(rx);
	Interrupt_Set_Enable(USART1);
	UART_RX_InterruptEnable();
	ESP_Get();*/



	while(1)
	{
		TIMx_CNT=0;
		flag=0;
		TIMx_ARR=0xffff;
		TIMER_ICU1InterruptEnable();

		GPIO_SetPinValue(PINA1,HIGH);
		SYSTICK_BusyWait_Ms(30);
		GPIO_SetPinValue(PINA1,LOW);
		while(flag<2);
		d=t/58;
		LCD_GoTo(1,0);
		LCD_WriteString("d=");
		LCD_WriteNumber(d);
		SYSTICK_BusyWait_Ms(100);

		if (d<20)
		{
			GPIO_SetPinValue(PINA6,HIGH);
		}
		else
		{
			GPIO_SetPinValue(PINA7,HIGH);
		}

	}

}


/*x=UART_Recieve();

		if (x=='F')
		{
			moveForward();
		}
		else if (x=='B')
		{
			GPIO_SetPinValue(PINB0,LOW);
			GPIO_SetPinValue(PINB1,HIGH);
			GPIO_SetPinValue(PINB5,LOW);
			GPIO_SetPinValue(PINB6,LOW);
		}
		else if (x=='L')
		{
			GPIO_SetPinValue(PINB0,LOW);
			GPIO_SetPinValue(PINB1,LOW);
			GPIO_SetPinValue(PINB5,HIGH);
			GPIO_SetPinValue(PINB6,LOW);
		}
		else if (x=='R')
		{
			GPIO_SetPinValue(PINB0,LOW);
			GPIO_SetPinValue(PINB1,LOW);
			GPIO_SetPinValue(PINB5,LOW);
			GPIO_SetPinValue(PINB6,HIGH);
		}*/
/*u32 Distance[4] = { 0 };
	HULTRASONIC_SENSOR_voidInit();
	GPIO_SetPinDirection(PB , PINA0, OUTPUT10KHZ_PUSHPALL);
	GPIO_SetPinDirection(PB , PINA1, OUTPUT10KHZ_PUSHPALL);

	while(1)
	{
		HULTRASONIC_SENSOR_voidCalculateDistance(Distance);
		if(Distance[0] < 10)
		{
			GPIO_SetPinValue(PINB1 , HIGH);
			GPIO_SetPinValue(PINB0 , LOW);
		}
		else
		{
			GPIO_SetPinValue(PINB0 , HIGH);
			GPIO_SetPinValue(PINB1 , LOW);
		}

	}*/


