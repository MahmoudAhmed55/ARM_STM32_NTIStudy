#define "STD_TYPES.h"
#define "BIT_MATH.h"

#define "RCC_Interface.h"
#define "RCC_Private.h"
#define "RCC_Config.h"

void RCC_InitClockSystem(void)
{
	RCC_CR=0X00000000;
	RCC_CFGR=0x00000000;
   #if RCC_CLOCK_TYPE==RCC_HSI

	SIT_BIT(RCC_CR,HSI_ON);                  //Enable HSI.
	SIT_BIT(RCC_CR,HSI_TRIM);                // TRIM FREQUANCY VALUE=16.
	while(READ_BIT(RCC_CR,HSI_RDY));         //BUSY_WAIT waiting for HSI ready flag.

   #elif  RCC_CLOCK_TYPE==RCC_HSE_CRYSTAL

	CLR_BIT(RCC_CR,HSE_BYP);                //Write 0 for ByPath CRYSTAL.
	SIT_BIT(RCC_CR,HSE_ON);                 //Enable HSE.
	while(READ_BIT(RCC_CR,HSE_RDY));        //BUSY_WAIT waiting for HSE ready flag.

   #elif  RCC_CLOCK_TYPE==RCC_HSE_RC

	SET_BIT(RCC_CR,HSE_BYP);                //Write 0 for ByPath RC.
	SIT_BIT(RCC_CR,HSE_ON);                 //Enable HSE.
	while(READ_BIT(RCC_CR,HSE_RDY));        //BUSY_WAIT waiting for HSE ready flag.

   #elif  RCC_CLOCK_TYPE==RCC_PLL

}
