/*
 * SYSTICK_Program.c
 *
 *  Created on: Nov 8, 2023
 *      Author: lenovo
 */

#include "../../lib/STD_TYPES.h"
#include "../../lib/BIT_MATH.h"
#include "SYSTICK_Interface.h"
#include "SYSTIC_Private.h"

void SYSTICK_Init(void)
{
	SIT_BIT(STK_CTRL,0);    //ENABLE SYSTICK



	CLR_BIT(STK_CTRL,2);    /* IF SIT CLOCK=AHB ,IF CLR CLOCK=AHB/8*/
}

void SYSTICK_BusyWait_Us(u32 ticks)
{
	STK_LOAD=ticks;
	while (STK_VAL>0);
	STK_LOAD=0;
}
void SYSTICK_BusyWait_Ms(u16 ticks)
{
	ticks=ticks*1000;
	SYSTICK_BusyWait_Us(ticks);

}

void SYSTICK_StopTimer(void)
{
	CLR_BIT(STK_CTRL,0);
}

void SYSTICK_InterruptEnable(void)
{
	SIT_BIT(STK_CTRL,1);  //SYSTICK_INTERRUPT
}
void SYSTICK_InterruptDisable(void)
{
	CLR_BIT(STK_CTRL,1);
}















/*void SysTick_Handler(void)
{

}*/
