/*==================================================================================*
 * File        : TIMER_INTERFACE.h     												*
 * Description : This file includes TIMER Driver prototypes and macros 				*
 * Author      : Mahmoud Gharib Embedded SW Engineer 								*
 * Date        : 																	*
 * Git account : https://github.com/Mahmoud-Gharib									*
 * mail        : mahmoudgharib99999@gmail.com 										*
 * version     : 1 v                                                           	    *
 *==================================================================================*/
#ifndef TIMER_INTERFACE_H
#define TIMER_INTERFACE_H


/***************  TIMER_ID ****************/
typedef enum 
{
	TIMER2 = 0,
	TIMER3    ,
	TIMER4
}TIMER_T;

/***************  TIMER_CHANNEL  ****************/
typedef enum 
{
	CHANNEL1  = 0,	
	CHANNEL2  	, 
	CHANNEL3  	,	
	CHANNEL4  		
}CHANNEL_T;


/***************  ICU_TRIG  ****************/
typedef enum
{
	RISING  = 0,
	FALLING
}TRIG_T;


void MTIMER_voidInitICU (void);
u16 MTIMER_u16GetCaptureValue(void);
void MTIMER_voidInputCaptureEdge(TRIG_T TRIG_ID);
void MTIMER_voidICUInterruptEnable(void);
void MTIMER_voidICUInterruptDisable(void);
void MTIMER_ICUSetCallBack(void(*Ptr)(void));
	
/*******************     Function Prototypes     **************************/
void MTIMER_voidInit ( TIMER_T TIMER_ID ) ;

void MTIMER_voidEnable( TIMER_T TIMER_ID ) ;
void MTIMER_voidDisable( TIMER_T TIMER_ID ) ;

void MTIMER_voidGeneratePWM ( TIMER_T TIMER_ID , CHANNEL_T CHANNEL_ID , u16 Copy_u16CompareValue ) ;

#endif 
